server:
  port: 8081 # 端口

spring:
  application:
    name: order-service

  datasource:
    url: jdbc:mysql://106.15.47.197:3306/seata_order?useSSL=false&useUnicode=true&characterEncoding=UTF-8
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    password: 123456

  cloud:
    # Nacos 作为注册中心的配置项
    nacos:
      discovery:
        server-addr: 106.15.47.197:8848
        namespace: e3ce5499-808c-424d-80ae-b71ac8f7b794

# Seata 配置项，对应 SeataProperties 类
seata:
  application-id: ${spring.application.name} # Seata 应用名称
  tx-service-group: ${spring.application.name}-group # Seata 事务组名称
  # Seata 服务配置项，对应 ServiceProperties 类
  service:
    # 虚拟分组和实际分组的映射
    vgroup-mapping:
      order-service-group: default # default 为TC集群名
    # TC集群的服务列表 注：只有registry.type=file会读，其他情况下不读
    grouplist:
      default: 106.15.47.197:8091
  # Seata 注册中心配置项，对应 RegistryProperties 类 注：这块读配置需和server端 conf/registry.conf的配置保持一致
  registry:
    type: nacos # 注册中心类型，默认为 file
    nacos:
      serverAddr: 106.15.47.197:8848 # Nacos 服务地址
      namespace: e3ce5499-808c-424d-80ae-b71ac8f7b794 # Nacos 命名空间

### 通过事务分组如何找到TC集群？(以Nacos为例)
#  1.获取事务分组
#  springboot可配置在yml、properties中，服务启动时加载配置seata.tx-service-group，对应的值"order-service-group"即为一个事务分组名，若不配置，默认获取属性spring.application.name的值+"-fescar-service-group"
#
#  2.查找TC集群名
#  拿到事务分组名"order-service-group"拼接成"service.vgroup-mapping.order-service-group"从配置中查找到TC集群名clusterName为"default"
#
#  3.查找TC服务
#  根据serverAddr和namespace以及clusterName在注册中心找到真实TC服务列表
#
#  注：serverAddr和namespace与Server端一致，clusterName与Server端cluster一致

### 以下配置解决第一次feign调用会出现超时的情况
feign:
  httpclient:
    connection-timeout: 60000
    connection-timer-repeat: 3000

ribbon:
  ConnectTimeout: 60000 # 设置连接超时时间 default 2000
  ReadTimeout: 60000   # 设置读取超时时间  default 5000
  OkToRetryOnAllOperations: true # 对所有操作请求都进行重试  default false
  MaxAutoRetriesNextServer: 3    # 切换实例的重试次数  default 1
  MaxAutoRetries: 3     # 对当前实例的重试次数 default 0